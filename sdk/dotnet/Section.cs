// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Phpipam
{
    [PhpipamResourceType("phpipam:index/section:Section")]
    public partial class Section : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The section's description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The section's display order number.
        /// </summary>
        [Output("displayOrder")]
        public Output<int> DisplayOrder { get; private set; } = null!;

        /// <summary>
        /// The ID of the DNS resolver to use in the
        /// section.
        /// </summary>
        [Output("dnsResolverId")]
        public Output<int> DnsResolverId { get; private set; } = null!;

        /// <summary>
        /// The date this resource was last edited.
        /// </summary>
        [Output("editDate")]
        public Output<string> EditDate { get; private set; } = null!;

        /// <summary>
        /// The ID of the parent section in the PHPIPAM
        /// database.
        /// </summary>
        [Output("masterSectionId")]
        public Output<int> MasterSectionId { get; private set; } = null!;

        /// <summary>
        /// The name of the section.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("permissions")]
        public Output<string> Permissions { get; private set; } = null!;

        /// <summary>
        /// The ID of the section in the PHPIPAM database.
        /// </summary>
        [Output("sectionId")]
        public Output<int> SectionId { get; private set; } = null!;

        /// <summary>
        /// `true` if supernets are only being shown in
        /// the subnet listing.
        /// </summary>
        [Output("showSupernetOnly")]
        public Output<bool> ShowSupernetOnly { get; private set; } = null!;

        /// <summary>
        /// `true` if VLANs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Output("showVlanInSubnetListing")]
        public Output<bool> ShowVlanInSubnetListing { get; private set; } = null!;

        /// <summary>
        /// `true` if VRFs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Output("showVrfInSubnetListing")]
        public Output<bool> ShowVrfInSubnetListing { get; private set; } = null!;

        /// <summary>
        /// `true` if this subnet is set up to check that IP
        /// addresses are valid for the subnets they are in.
        /// </summary>
        [Output("strictMode")]
        public Output<bool> StrictMode { get; private set; } = null!;

        /// <summary>
        /// How subnets in this section are ordered.
        /// </summary>
        [Output("subnetOrdering")]
        public Output<string> SubnetOrdering { get; private set; } = null!;


        /// <summary>
        /// Create a Section resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Section(string name, SectionArgs? args = null, CustomResourceOptions? options = null)
            : base("phpipam:index/section:Section", name, args ?? new SectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Section(string name, Input<string> id, SectionState? state = null, CustomResourceOptions? options = null)
            : base("phpipam:index/section:Section", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Section resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Section Get(string name, Input<string> id, SectionState? state = null, CustomResourceOptions? options = null)
        {
            return new Section(name, id, state, options);
        }
    }

    public sealed class SectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The section's description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The section's display order number.
        /// </summary>
        [Input("displayOrder")]
        public Input<int>? DisplayOrder { get; set; }

        /// <summary>
        /// The ID of the DNS resolver to use in the
        /// section.
        /// </summary>
        [Input("dnsResolverId")]
        public Input<int>? DnsResolverId { get; set; }

        /// <summary>
        /// The ID of the parent section in the PHPIPAM
        /// database.
        /// </summary>
        [Input("masterSectionId")]
        public Input<int>? MasterSectionId { get; set; }

        /// <summary>
        /// The name of the section.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `true` if supernets are only being shown in
        /// the subnet listing.
        /// </summary>
        [Input("showSupernetOnly")]
        public Input<bool>? ShowSupernetOnly { get; set; }

        /// <summary>
        /// `true` if VLANs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Input("showVlanInSubnetListing")]
        public Input<bool>? ShowVlanInSubnetListing { get; set; }

        /// <summary>
        /// `true` if VRFs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Input("showVrfInSubnetListing")]
        public Input<bool>? ShowVrfInSubnetListing { get; set; }

        /// <summary>
        /// `true` if this subnet is set up to check that IP
        /// addresses are valid for the subnets they are in.
        /// </summary>
        [Input("strictMode")]
        public Input<bool>? StrictMode { get; set; }

        /// <summary>
        /// How subnets in this section are ordered.
        /// </summary>
        [Input("subnetOrdering")]
        public Input<string>? SubnetOrdering { get; set; }

        public SectionArgs()
        {
        }
        public static new SectionArgs Empty => new SectionArgs();
    }

    public sealed class SectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The section's description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The section's display order number.
        /// </summary>
        [Input("displayOrder")]
        public Input<int>? DisplayOrder { get; set; }

        /// <summary>
        /// The ID of the DNS resolver to use in the
        /// section.
        /// </summary>
        [Input("dnsResolverId")]
        public Input<int>? DnsResolverId { get; set; }

        /// <summary>
        /// The date this resource was last edited.
        /// </summary>
        [Input("editDate")]
        public Input<string>? EditDate { get; set; }

        /// <summary>
        /// The ID of the parent section in the PHPIPAM
        /// database.
        /// </summary>
        [Input("masterSectionId")]
        public Input<int>? MasterSectionId { get; set; }

        /// <summary>
        /// The name of the section.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        public Input<string>? Permissions { get; set; }

        /// <summary>
        /// The ID of the section in the PHPIPAM database.
        /// </summary>
        [Input("sectionId")]
        public Input<int>? SectionId { get; set; }

        /// <summary>
        /// `true` if supernets are only being shown in
        /// the subnet listing.
        /// </summary>
        [Input("showSupernetOnly")]
        public Input<bool>? ShowSupernetOnly { get; set; }

        /// <summary>
        /// `true` if VLANs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Input("showVlanInSubnetListing")]
        public Input<bool>? ShowVlanInSubnetListing { get; set; }

        /// <summary>
        /// `true` if VRFs are being shown in
        /// the subnet listing for this section.
        /// </summary>
        [Input("showVrfInSubnetListing")]
        public Input<bool>? ShowVrfInSubnetListing { get; set; }

        /// <summary>
        /// `true` if this subnet is set up to check that IP
        /// addresses are valid for the subnets they are in.
        /// </summary>
        [Input("strictMode")]
        public Input<bool>? StrictMode { get; set; }

        /// <summary>
        /// How subnets in this section are ordered.
        /// </summary>
        [Input("subnetOrdering")]
        public Input<string>? SubnetOrdering { get; set; }

        public SectionState()
        {
        }
        public static new SectionState Empty => new SectionState();
    }
}
