// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Phpipam
{
    public static class GetSubnets
    {
        public static Task<GetSubnetsResult> InvokeAsync(GetSubnetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubnetsResult>("phpipam:index/getSubnets:getSubnets", args ?? new GetSubnetsArgs(), options.WithDefaults());

        public static Output<GetSubnetsResult> Invoke(GetSubnetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetsResult>("phpipam:index/getSubnets:getSubnets", args ?? new GetSubnetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("customFieldFilter")]
        private Dictionary<string, object>? _customFieldFilter;

        /// <summary>
        /// A map of custom fields to search for. The filter
        /// values are regular expressions. All fields need to match for the match to
        /// succeed.
        /// 
        /// You can find documentation for the regular expression syntax used with the
        /// `description_match` and `custom_field_filter` attributes
        /// [here](https://github.com/google/re2/wiki/Syntax).
        /// 
        /// ⚠️  **NOTE:** An empty or unspecified `custom_field_filter` value is the
        /// equivalent to a regular expression that matches everything, and hence will
        /// return **all** subnets that contain the referenced custom field key!
        /// Custom fileds must contain mandatory prefix `custom_`.
        /// </summary>
        public Dictionary<string, object> CustomFieldFilter
        {
            get => _customFieldFilter ?? (_customFieldFilter = new Dictionary<string, object>());
            set => _customFieldFilter = value;
        }

        /// <summary>
        /// The subnet's description.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A regular expression to match against when searching
        /// for a subnet.
        /// </summary>
        [Input("descriptionMatch")]
        public string? DescriptionMatch { get; set; }

        /// <summary>
        /// The ID of the section of the subnet.
        /// 
        /// One of the following below parameters is required:
        /// </summary>
        [Input("sectionId", required: true)]
        public int SectionId { get; set; }

        public GetSubnetsArgs()
        {
        }
        public static new GetSubnetsArgs Empty => new GetSubnetsArgs();
    }

    public sealed class GetSubnetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customFieldFilter")]
        private InputMap<object>? _customFieldFilter;

        /// <summary>
        /// A map of custom fields to search for. The filter
        /// values are regular expressions. All fields need to match for the match to
        /// succeed.
        /// 
        /// You can find documentation for the regular expression syntax used with the
        /// `description_match` and `custom_field_filter` attributes
        /// [here](https://github.com/google/re2/wiki/Syntax).
        /// 
        /// ⚠️  **NOTE:** An empty or unspecified `custom_field_filter` value is the
        /// equivalent to a regular expression that matches everything, and hence will
        /// return **all** subnets that contain the referenced custom field key!
        /// Custom fileds must contain mandatory prefix `custom_`.
        /// </summary>
        public InputMap<object> CustomFieldFilter
        {
            get => _customFieldFilter ?? (_customFieldFilter = new InputMap<object>());
            set => _customFieldFilter = value;
        }

        /// <summary>
        /// The subnet's description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A regular expression to match against when searching
        /// for a subnet.
        /// </summary>
        [Input("descriptionMatch")]
        public Input<string>? DescriptionMatch { get; set; }

        /// <summary>
        /// The ID of the section of the subnet.
        /// 
        /// One of the following below parameters is required:
        /// </summary>
        [Input("sectionId", required: true)]
        public Input<int> SectionId { get; set; } = null!;

        public GetSubnetsInvokeArgs()
        {
        }
        public static new GetSubnetsInvokeArgs Empty => new GetSubnetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetsResult
    {
        public readonly ImmutableDictionary<string, object>? CustomFieldFilter;
        public readonly string? Description;
        public readonly string? DescriptionMatch;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int SectionId;
        /// <summary>
        /// A list of subnet IDs that match the given criteria.
        /// </summary>
        public readonly ImmutableArray<int> SubnetIds;

        [OutputConstructor]
        private GetSubnetsResult(
            ImmutableDictionary<string, object>? customFieldFilter,

            string? description,

            string? descriptionMatch,

            string id,

            int sectionId,

            ImmutableArray<int> subnetIds)
        {
            CustomFieldFilter = customFieldFilter;
            Description = description;
            DescriptionMatch = descriptionMatch;
            Id = id;
            SectionId = sectionId;
            SubnetIds = subnetIds;
        }
    }
}
