// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Phpipam
{
    [PhpipamResourceType("phpipam:index/firstFreeSubnet:FirstFreeSubnet")]
    public partial class FirstFreeSubnet : global::Pulumi.CustomResource
    {
        [Output("allowIpRequests")]
        public Output<bool> AllowIpRequests { get; private set; } = null!;

        [Output("createPtrRecords")]
        public Output<bool> CreatePtrRecords { get; private set; } = null!;

        [Output("customFields")]
        public Output<ImmutableDictionary<string, object>> CustomFields { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("displayHostnames")]
        public Output<bool> DisplayHostnames { get; private set; } = null!;

        [Output("editDate")]
        public Output<string> EditDate { get; private set; } = null!;

        [Output("gateway")]
        public Output<ImmutableDictionary<string, object>> Gateway { get; private set; } = null!;

        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        [Output("hostDiscoveryEnabled")]
        public Output<bool> HostDiscoveryEnabled { get; private set; } = null!;

        [Output("includeInPing")]
        public Output<bool> IncludeInPing { get; private set; } = null!;

        [Output("isFolder")]
        public Output<bool> IsFolder { get; private set; } = null!;

        [Output("isFull")]
        public Output<bool> IsFull { get; private set; } = null!;

        [Output("linkedSubnetId")]
        public Output<int> LinkedSubnetId { get; private set; } = null!;

        [Output("locationId")]
        public Output<int> LocationId { get; private set; } = null!;

        [Output("masterSubnetId")]
        public Output<int> MasterSubnetId { get; private set; } = null!;

        [Output("nameserverId")]
        public Output<int> NameserverId { get; private set; } = null!;

        [Output("nameservers")]
        public Output<ImmutableDictionary<string, object>> Nameservers { get; private set; } = null!;

        [Output("parentSubnetId")]
        public Output<int> ParentSubnetId { get; private set; } = null!;

        [Output("permissions")]
        public Output<string> Permissions { get; private set; } = null!;

        [Output("resolveDns")]
        public Output<bool> ResolveDns { get; private set; } = null!;

        [Output("scanAgentId")]
        public Output<int> ScanAgentId { get; private set; } = null!;

        [Output("sectionId")]
        public Output<int> SectionId { get; private set; } = null!;

        [Output("showName")]
        public Output<bool> ShowName { get; private set; } = null!;

        [Output("subnetAddress")]
        public Output<string> SubnetAddress { get; private set; } = null!;

        [Output("subnetId")]
        public Output<int> SubnetId { get; private set; } = null!;

        [Output("subnetMask")]
        public Output<int> SubnetMask { get; private set; } = null!;

        [Output("utilizationThreshold")]
        public Output<int> UtilizationThreshold { get; private set; } = null!;

        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;

        [Output("vrfId")]
        public Output<int> VrfId { get; private set; } = null!;


        /// <summary>
        /// Create a FirstFreeSubnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirstFreeSubnet(string name, FirstFreeSubnetArgs args, CustomResourceOptions? options = null)
            : base("phpipam:index/firstFreeSubnet:FirstFreeSubnet", name, args ?? new FirstFreeSubnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirstFreeSubnet(string name, Input<string> id, FirstFreeSubnetState? state = null, CustomResourceOptions? options = null)
            : base("phpipam:index/firstFreeSubnet:FirstFreeSubnet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirstFreeSubnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirstFreeSubnet Get(string name, Input<string> id, FirstFreeSubnetState? state = null, CustomResourceOptions? options = null)
        {
            return new FirstFreeSubnet(name, id, state, options);
        }
    }

    public sealed class FirstFreeSubnetArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowIpRequests")]
        public Input<bool>? AllowIpRequests { get; set; }

        [Input("createPtrRecords")]
        public Input<bool>? CreatePtrRecords { get; set; }

        [Input("customFields")]
        private InputMap<object>? _customFields;
        public InputMap<object> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<object>());
            set => _customFields = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayHostnames")]
        public Input<bool>? DisplayHostnames { get; set; }

        [Input("hostDiscoveryEnabled")]
        public Input<bool>? HostDiscoveryEnabled { get; set; }

        [Input("includeInPing")]
        public Input<bool>? IncludeInPing { get; set; }

        [Input("isFolder")]
        public Input<bool>? IsFolder { get; set; }

        [Input("isFull")]
        public Input<bool>? IsFull { get; set; }

        [Input("linkedSubnetId")]
        public Input<int>? LinkedSubnetId { get; set; }

        [Input("locationId")]
        public Input<int>? LocationId { get; set; }

        [Input("masterSubnetId")]
        public Input<int>? MasterSubnetId { get; set; }

        [Input("nameserverId")]
        public Input<int>? NameserverId { get; set; }

        [Input("parentSubnetId", required: true)]
        public Input<int> ParentSubnetId { get; set; } = null!;

        [Input("resolveDns")]
        public Input<bool>? ResolveDns { get; set; }

        [Input("scanAgentId")]
        public Input<int>? ScanAgentId { get; set; }

        [Input("sectionId")]
        public Input<int>? SectionId { get; set; }

        [Input("showName")]
        public Input<bool>? ShowName { get; set; }

        [Input("subnetMask", required: true)]
        public Input<int> SubnetMask { get; set; } = null!;

        [Input("utilizationThreshold")]
        public Input<int>? UtilizationThreshold { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        [Input("vrfId")]
        public Input<int>? VrfId { get; set; }

        public FirstFreeSubnetArgs()
        {
        }
        public static new FirstFreeSubnetArgs Empty => new FirstFreeSubnetArgs();
    }

    public sealed class FirstFreeSubnetState : global::Pulumi.ResourceArgs
    {
        [Input("allowIpRequests")]
        public Input<bool>? AllowIpRequests { get; set; }

        [Input("createPtrRecords")]
        public Input<bool>? CreatePtrRecords { get; set; }

        [Input("customFields")]
        private InputMap<object>? _customFields;
        public InputMap<object> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<object>());
            set => _customFields = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayHostnames")]
        public Input<bool>? DisplayHostnames { get; set; }

        [Input("editDate")]
        public Input<string>? EditDate { get; set; }

        [Input("gateway")]
        private InputMap<object>? _gateway;
        public InputMap<object> Gateway
        {
            get => _gateway ?? (_gateway = new InputMap<object>());
            set => _gateway = value;
        }

        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        [Input("hostDiscoveryEnabled")]
        public Input<bool>? HostDiscoveryEnabled { get; set; }

        [Input("includeInPing")]
        public Input<bool>? IncludeInPing { get; set; }

        [Input("isFolder")]
        public Input<bool>? IsFolder { get; set; }

        [Input("isFull")]
        public Input<bool>? IsFull { get; set; }

        [Input("linkedSubnetId")]
        public Input<int>? LinkedSubnetId { get; set; }

        [Input("locationId")]
        public Input<int>? LocationId { get; set; }

        [Input("masterSubnetId")]
        public Input<int>? MasterSubnetId { get; set; }

        [Input("nameserverId")]
        public Input<int>? NameserverId { get; set; }

        [Input("nameservers")]
        private InputMap<object>? _nameservers;
        public InputMap<object> Nameservers
        {
            get => _nameservers ?? (_nameservers = new InputMap<object>());
            set => _nameservers = value;
        }

        [Input("parentSubnetId")]
        public Input<int>? ParentSubnetId { get; set; }

        [Input("permissions")]
        public Input<string>? Permissions { get; set; }

        [Input("resolveDns")]
        public Input<bool>? ResolveDns { get; set; }

        [Input("scanAgentId")]
        public Input<int>? ScanAgentId { get; set; }

        [Input("sectionId")]
        public Input<int>? SectionId { get; set; }

        [Input("showName")]
        public Input<bool>? ShowName { get; set; }

        [Input("subnetAddress")]
        public Input<string>? SubnetAddress { get; set; }

        [Input("subnetId")]
        public Input<int>? SubnetId { get; set; }

        [Input("subnetMask")]
        public Input<int>? SubnetMask { get; set; }

        [Input("utilizationThreshold")]
        public Input<int>? UtilizationThreshold { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        [Input("vrfId")]
        public Input<int>? VrfId { get; set; }

        public FirstFreeSubnetState()
        {
        }
        public static new FirstFreeSubnetState Empty => new FirstFreeSubnetState();
    }
}
