// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package phpipam

import (
	"context"
	"reflect"

	"github.com/DBACHRY13/pulumi-phpipam/sdk/go/phpipam/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Address
//
// The `Address` data source allows one to get information about a specific
// IP address within PHPIPAM. Use this address to get general information about a
// specific IP address such as its host name, description and more.
//
// Lookups for IP addresses can only happen at this time via its entry in the
// database, or the IP address itself. Future versions of this resource, when such
// features become generally available in the PHPIPAM API, will allow lookup based
// on host name, allowing for better ability for this resource to discover IP
// addresses that have been pre-assigned for a specific resource.
//
// **Example:**
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/DBACHRY13/pulumi-phpipam/sdk/go/phpipam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			address, err := phpipam.LookupAddress(ctx, &phpipam.LookupAddressArgs{
//				IpAddress: pulumi.StringRef("10.10.1.1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("addressDescription", address.Description)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// **Example With `subnetId` when multiple subnets share the same ip ranges :**
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/DBACHRY13/pulumi-phpipam/sdk/go/phpipam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			address, err := phpipam.LookupAddress(ctx, &phpipam.LookupAddressArgs{
//				IpAddress: pulumi.StringRef("10.10.1.1"),
//				SubnetId:  pulumi.IntRef(3),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("addressDescription", address.Description)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// **Example With `description`:**
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/DBACHRY13/pulumi-phpipam/sdk/go/phpipam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			address, err := phpipam.LookupAddress(ctx, &phpipam.LookupAddressArgs{
//				SubnetId:    pulumi.IntRef(3),
//				Description: pulumi.StringRef("Customer 1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("addressDescription", address.Description)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// **Example With `customFieldFilter`:**
func LookupAddress(ctx *pulumi.Context, args *LookupAddressArgs, opts ...pulumi.InvokeOption) (*LookupAddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAddressResult
	err := ctx.Invoke("phpipam:index/getAddress:getAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAddress.
type LookupAddressArgs struct {
	AddressId *int `pulumi:"addressId"`
	// A map of custom fields to search for. The filter
	// values are regular expressions that follow the RE2 syntax for which you can
	// find documentation [here](https://github.com/google/re2/wiki/Syntax). All
	// fields need to match for the match to succeed.
	//
	// ⚠️ **NOTE:** `description`, `hostname`, and `customFieldFilter` fields return
	// the first match found without any warnings. If you are looking to return
	// multiple addresses, combine this data source with the
	// `getAddresses` data source.
	//
	// ⚠️ **NOTE:** An empty or unspecified `customFieldFilter` value is the
	// equivalent to a regular expression that matches everything, and hence will
	// return the first address it sees in the subnet. Custom fileds must contain mandatory
	// prefix `custom_`.
	//
	// Arguments are processed in the following order of precedence:
	CustomFieldFilter map[string]interface{} `pulumi:"customFieldFilter"`
	// The description of the IP address. `subnetId` is required
	// when using this field.
	Description *string `pulumi:"description"`
	// The host name of the IP address. `subnetId` is required when
	// using this field.
	Hostname  *string `pulumi:"hostname"`
	IpAddress *string `pulumi:"ipAddress"`
	// , and either one of `description`, `hostname`, or
	// `customFieldFilter`
	SubnetId *int `pulumi:"subnetId"`
}

// A collection of values returned by getAddress.
type LookupAddressResult struct {
	// The ID of the IP address in the PHPIPAM database.
	AddressId         int                    `pulumi:"addressId"`
	CustomFieldFilter map[string]interface{} `pulumi:"customFieldFilter"`
	// A key/value map of custom fields for this address.
	CustomFields map[string]interface{} `pulumi:"customFields"`
	// The description provided to this IP address.
	Description string `pulumi:"description"`
	// The ID of the associated device in the PHPIPAM database.
	DeviceId int `pulumi:"deviceId"`
	// The last time this resource was modified.
	EditDate string `pulumi:"editDate"`
	// `true` if this address is excluded from ping probes.
	ExcludePing bool `pulumi:"excludePing"`
	// The hostname supplied to this IP address.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// the IP address.
	IpAddress string `pulumi:"ipAddress"`
	// `true` if this IP address has been designated as a gateway.
	IsGateway bool `pulumi:"isGateway"`
	// The last time this IP address answered ping probes.
	LastSeen string `pulumi:"lastSeen"`
	// The MAC address provided to this IP address.
	MacAddress string `pulumi:"macAddress"`
	// The note supplied to this IP address.
	Note string `pulumi:"note"`
	// The owner name provided to this IP address.
	Owner string `pulumi:"owner"`
	// The ID of the associated PTR record in the PHPIPAM
	// database.
	PtrRecordId int `pulumi:"ptrRecordId"`
	// `true` if PTR records are not being created for this IP
	// address.
	SkipPtrRecord bool `pulumi:"skipPtrRecord"`
	// The tag ID in the database for the IP address' specific
	// state. **NOTE:** This is currently represented as an integer but may change
	// to the specific string representation at a later time.
	StateTagId int `pulumi:"stateTagId"`
	// The database ID of the subnet this IP address belongs to.
	SubnetId int `pulumi:"subnetId"`
	// A string port label that is associated with this
	// address.
	SwitchPortLabel string `pulumi:"switchPortLabel"`
}

func LookupAddressOutput(ctx *pulumi.Context, args LookupAddressOutputArgs, opts ...pulumi.InvokeOption) LookupAddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAddressResult, error) {
			args := v.(LookupAddressArgs)
			r, err := LookupAddress(ctx, &args, opts...)
			var s LookupAddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAddressResultOutput)
}

// A collection of arguments for invoking getAddress.
type LookupAddressOutputArgs struct {
	AddressId pulumi.IntPtrInput `pulumi:"addressId"`
	// A map of custom fields to search for. The filter
	// values are regular expressions that follow the RE2 syntax for which you can
	// find documentation [here](https://github.com/google/re2/wiki/Syntax). All
	// fields need to match for the match to succeed.
	//
	// ⚠️ **NOTE:** `description`, `hostname`, and `customFieldFilter` fields return
	// the first match found without any warnings. If you are looking to return
	// multiple addresses, combine this data source with the
	// `getAddresses` data source.
	//
	// ⚠️ **NOTE:** An empty or unspecified `customFieldFilter` value is the
	// equivalent to a regular expression that matches everything, and hence will
	// return the first address it sees in the subnet. Custom fileds must contain mandatory
	// prefix `custom_`.
	//
	// Arguments are processed in the following order of precedence:
	CustomFieldFilter pulumi.MapInput `pulumi:"customFieldFilter"`
	// The description of the IP address. `subnetId` is required
	// when using this field.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The host name of the IP address. `subnetId` is required when
	// using this field.
	Hostname  pulumi.StringPtrInput `pulumi:"hostname"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// , and either one of `description`, `hostname`, or
	// `customFieldFilter`
	SubnetId pulumi.IntPtrInput `pulumi:"subnetId"`
}

func (LookupAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressArgs)(nil)).Elem()
}

// A collection of values returned by getAddress.
type LookupAddressResultOutput struct{ *pulumi.OutputState }

func (LookupAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressResult)(nil)).Elem()
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutput() LookupAddressResultOutput {
	return o
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutputWithContext(ctx context.Context) LookupAddressResultOutput {
	return o
}

// The ID of the IP address in the PHPIPAM database.
func (o LookupAddressResultOutput) AddressId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.AddressId }).(pulumi.IntOutput)
}

func (o LookupAddressResultOutput) CustomFieldFilter() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAddressResult) map[string]interface{} { return v.CustomFieldFilter }).(pulumi.MapOutput)
}

// A key/value map of custom fields for this address.
func (o LookupAddressResultOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v LookupAddressResult) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

// The description provided to this IP address.
func (o LookupAddressResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the associated device in the PHPIPAM database.
func (o LookupAddressResultOutput) DeviceId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.DeviceId }).(pulumi.IntOutput)
}

// The last time this resource was modified.
func (o LookupAddressResultOutput) EditDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.EditDate }).(pulumi.StringOutput)
}

// `true` if this address is excluded from ping probes.
func (o LookupAddressResultOutput) ExcludePing() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAddressResult) bool { return v.ExcludePing }).(pulumi.BoolOutput)
}

// The hostname supplied to this IP address.
func (o LookupAddressResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Id }).(pulumi.StringOutput)
}

// the IP address.
func (o LookupAddressResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// `true` if this IP address has been designated as a gateway.
func (o LookupAddressResultOutput) IsGateway() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAddressResult) bool { return v.IsGateway }).(pulumi.BoolOutput)
}

// The last time this IP address answered ping probes.
func (o LookupAddressResultOutput) LastSeen() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.LastSeen }).(pulumi.StringOutput)
}

// The MAC address provided to this IP address.
func (o LookupAddressResultOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The note supplied to this IP address.
func (o LookupAddressResultOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Note }).(pulumi.StringOutput)
}

// The owner name provided to this IP address.
func (o LookupAddressResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Owner }).(pulumi.StringOutput)
}

// The ID of the associated PTR record in the PHPIPAM
// database.
func (o LookupAddressResultOutput) PtrRecordId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.PtrRecordId }).(pulumi.IntOutput)
}

// `true` if PTR records are not being created for this IP
// address.
func (o LookupAddressResultOutput) SkipPtrRecord() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAddressResult) bool { return v.SkipPtrRecord }).(pulumi.BoolOutput)
}

// The tag ID in the database for the IP address' specific
// state. **NOTE:** This is currently represented as an integer but may change
// to the specific string representation at a later time.
func (o LookupAddressResultOutput) StateTagId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.StateTagId }).(pulumi.IntOutput)
}

// The database ID of the subnet this IP address belongs to.
func (o LookupAddressResultOutput) SubnetId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAddressResult) int { return v.SubnetId }).(pulumi.IntOutput)
}

// A string port label that is associated with this
// address.
func (o LookupAddressResultOutput) SwitchPortLabel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SwitchPortLabel }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddressResultOutput{})
}
