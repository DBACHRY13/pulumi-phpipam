// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package phpipam

import (
	"context"
	"reflect"

	"errors"
	"github.com/DBACHRY13/pulumi-phpipam/sdk/go/phpipam/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirstFreeSubnet struct {
	pulumi.CustomResourceState

	AllowIpRequests      pulumi.BoolOutput   `pulumi:"allowIpRequests"`
	CreatePtrRecords     pulumi.BoolOutput   `pulumi:"createPtrRecords"`
	CustomFields         pulumi.MapOutput    `pulumi:"customFields"`
	Description          pulumi.StringOutput `pulumi:"description"`
	DisplayHostnames     pulumi.BoolOutput   `pulumi:"displayHostnames"`
	EditDate             pulumi.StringOutput `pulumi:"editDate"`
	Gateway              pulumi.MapOutput    `pulumi:"gateway"`
	GatewayId            pulumi.StringOutput `pulumi:"gatewayId"`
	HostDiscoveryEnabled pulumi.BoolOutput   `pulumi:"hostDiscoveryEnabled"`
	IncludeInPing        pulumi.BoolOutput   `pulumi:"includeInPing"`
	IsFolder             pulumi.BoolOutput   `pulumi:"isFolder"`
	IsFull               pulumi.BoolOutput   `pulumi:"isFull"`
	LinkedSubnetId       pulumi.IntOutput    `pulumi:"linkedSubnetId"`
	LocationId           pulumi.IntOutput    `pulumi:"locationId"`
	MasterSubnetId       pulumi.IntOutput    `pulumi:"masterSubnetId"`
	NameserverId         pulumi.IntOutput    `pulumi:"nameserverId"`
	Nameservers          pulumi.MapOutput    `pulumi:"nameservers"`
	ParentSubnetId       pulumi.IntOutput    `pulumi:"parentSubnetId"`
	Permissions          pulumi.StringOutput `pulumi:"permissions"`
	ResolveDns           pulumi.BoolOutput   `pulumi:"resolveDns"`
	ScanAgentId          pulumi.IntOutput    `pulumi:"scanAgentId"`
	SectionId            pulumi.IntOutput    `pulumi:"sectionId"`
	ShowName             pulumi.BoolOutput   `pulumi:"showName"`
	SubnetAddress        pulumi.StringOutput `pulumi:"subnetAddress"`
	SubnetId             pulumi.IntOutput    `pulumi:"subnetId"`
	SubnetMask           pulumi.IntOutput    `pulumi:"subnetMask"`
	UtilizationThreshold pulumi.IntOutput    `pulumi:"utilizationThreshold"`
	VlanId               pulumi.IntOutput    `pulumi:"vlanId"`
	VrfId                pulumi.IntOutput    `pulumi:"vrfId"`
}

// NewFirstFreeSubnet registers a new resource with the given unique name, arguments, and options.
func NewFirstFreeSubnet(ctx *pulumi.Context,
	name string, args *FirstFreeSubnetArgs, opts ...pulumi.ResourceOption) (*FirstFreeSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ParentSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'ParentSubnetId'")
	}
	if args.SubnetMask == nil {
		return nil, errors.New("invalid value for required argument 'SubnetMask'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirstFreeSubnet
	err := ctx.RegisterResource("phpipam:index/firstFreeSubnet:FirstFreeSubnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirstFreeSubnet gets an existing FirstFreeSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirstFreeSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirstFreeSubnetState, opts ...pulumi.ResourceOption) (*FirstFreeSubnet, error) {
	var resource FirstFreeSubnet
	err := ctx.ReadResource("phpipam:index/firstFreeSubnet:FirstFreeSubnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirstFreeSubnet resources.
type firstFreeSubnetState struct {
	AllowIpRequests      *bool                  `pulumi:"allowIpRequests"`
	CreatePtrRecords     *bool                  `pulumi:"createPtrRecords"`
	CustomFields         map[string]interface{} `pulumi:"customFields"`
	Description          *string                `pulumi:"description"`
	DisplayHostnames     *bool                  `pulumi:"displayHostnames"`
	EditDate             *string                `pulumi:"editDate"`
	Gateway              map[string]interface{} `pulumi:"gateway"`
	GatewayId            *string                `pulumi:"gatewayId"`
	HostDiscoveryEnabled *bool                  `pulumi:"hostDiscoveryEnabled"`
	IncludeInPing        *bool                  `pulumi:"includeInPing"`
	IsFolder             *bool                  `pulumi:"isFolder"`
	IsFull               *bool                  `pulumi:"isFull"`
	LinkedSubnetId       *int                   `pulumi:"linkedSubnetId"`
	LocationId           *int                   `pulumi:"locationId"`
	MasterSubnetId       *int                   `pulumi:"masterSubnetId"`
	NameserverId         *int                   `pulumi:"nameserverId"`
	Nameservers          map[string]interface{} `pulumi:"nameservers"`
	ParentSubnetId       *int                   `pulumi:"parentSubnetId"`
	Permissions          *string                `pulumi:"permissions"`
	ResolveDns           *bool                  `pulumi:"resolveDns"`
	ScanAgentId          *int                   `pulumi:"scanAgentId"`
	SectionId            *int                   `pulumi:"sectionId"`
	ShowName             *bool                  `pulumi:"showName"`
	SubnetAddress        *string                `pulumi:"subnetAddress"`
	SubnetId             *int                   `pulumi:"subnetId"`
	SubnetMask           *int                   `pulumi:"subnetMask"`
	UtilizationThreshold *int                   `pulumi:"utilizationThreshold"`
	VlanId               *int                   `pulumi:"vlanId"`
	VrfId                *int                   `pulumi:"vrfId"`
}

type FirstFreeSubnetState struct {
	AllowIpRequests      pulumi.BoolPtrInput
	CreatePtrRecords     pulumi.BoolPtrInput
	CustomFields         pulumi.MapInput
	Description          pulumi.StringPtrInput
	DisplayHostnames     pulumi.BoolPtrInput
	EditDate             pulumi.StringPtrInput
	Gateway              pulumi.MapInput
	GatewayId            pulumi.StringPtrInput
	HostDiscoveryEnabled pulumi.BoolPtrInput
	IncludeInPing        pulumi.BoolPtrInput
	IsFolder             pulumi.BoolPtrInput
	IsFull               pulumi.BoolPtrInput
	LinkedSubnetId       pulumi.IntPtrInput
	LocationId           pulumi.IntPtrInput
	MasterSubnetId       pulumi.IntPtrInput
	NameserverId         pulumi.IntPtrInput
	Nameservers          pulumi.MapInput
	ParentSubnetId       pulumi.IntPtrInput
	Permissions          pulumi.StringPtrInput
	ResolveDns           pulumi.BoolPtrInput
	ScanAgentId          pulumi.IntPtrInput
	SectionId            pulumi.IntPtrInput
	ShowName             pulumi.BoolPtrInput
	SubnetAddress        pulumi.StringPtrInput
	SubnetId             pulumi.IntPtrInput
	SubnetMask           pulumi.IntPtrInput
	UtilizationThreshold pulumi.IntPtrInput
	VlanId               pulumi.IntPtrInput
	VrfId                pulumi.IntPtrInput
}

func (FirstFreeSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*firstFreeSubnetState)(nil)).Elem()
}

type firstFreeSubnetArgs struct {
	AllowIpRequests      *bool                  `pulumi:"allowIpRequests"`
	CreatePtrRecords     *bool                  `pulumi:"createPtrRecords"`
	CustomFields         map[string]interface{} `pulumi:"customFields"`
	Description          *string                `pulumi:"description"`
	DisplayHostnames     *bool                  `pulumi:"displayHostnames"`
	HostDiscoveryEnabled *bool                  `pulumi:"hostDiscoveryEnabled"`
	IncludeInPing        *bool                  `pulumi:"includeInPing"`
	IsFolder             *bool                  `pulumi:"isFolder"`
	IsFull               *bool                  `pulumi:"isFull"`
	LinkedSubnetId       *int                   `pulumi:"linkedSubnetId"`
	LocationId           *int                   `pulumi:"locationId"`
	MasterSubnetId       *int                   `pulumi:"masterSubnetId"`
	NameserverId         *int                   `pulumi:"nameserverId"`
	ParentSubnetId       int                    `pulumi:"parentSubnetId"`
	ResolveDns           *bool                  `pulumi:"resolveDns"`
	ScanAgentId          *int                   `pulumi:"scanAgentId"`
	SectionId            *int                   `pulumi:"sectionId"`
	ShowName             *bool                  `pulumi:"showName"`
	SubnetMask           int                    `pulumi:"subnetMask"`
	UtilizationThreshold *int                   `pulumi:"utilizationThreshold"`
	VlanId               *int                   `pulumi:"vlanId"`
	VrfId                *int                   `pulumi:"vrfId"`
}

// The set of arguments for constructing a FirstFreeSubnet resource.
type FirstFreeSubnetArgs struct {
	AllowIpRequests      pulumi.BoolPtrInput
	CreatePtrRecords     pulumi.BoolPtrInput
	CustomFields         pulumi.MapInput
	Description          pulumi.StringPtrInput
	DisplayHostnames     pulumi.BoolPtrInput
	HostDiscoveryEnabled pulumi.BoolPtrInput
	IncludeInPing        pulumi.BoolPtrInput
	IsFolder             pulumi.BoolPtrInput
	IsFull               pulumi.BoolPtrInput
	LinkedSubnetId       pulumi.IntPtrInput
	LocationId           pulumi.IntPtrInput
	MasterSubnetId       pulumi.IntPtrInput
	NameserverId         pulumi.IntPtrInput
	ParentSubnetId       pulumi.IntInput
	ResolveDns           pulumi.BoolPtrInput
	ScanAgentId          pulumi.IntPtrInput
	SectionId            pulumi.IntPtrInput
	ShowName             pulumi.BoolPtrInput
	SubnetMask           pulumi.IntInput
	UtilizationThreshold pulumi.IntPtrInput
	VlanId               pulumi.IntPtrInput
	VrfId                pulumi.IntPtrInput
}

func (FirstFreeSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firstFreeSubnetArgs)(nil)).Elem()
}

type FirstFreeSubnetInput interface {
	pulumi.Input

	ToFirstFreeSubnetOutput() FirstFreeSubnetOutput
	ToFirstFreeSubnetOutputWithContext(ctx context.Context) FirstFreeSubnetOutput
}

func (*FirstFreeSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((**FirstFreeSubnet)(nil)).Elem()
}

func (i *FirstFreeSubnet) ToFirstFreeSubnetOutput() FirstFreeSubnetOutput {
	return i.ToFirstFreeSubnetOutputWithContext(context.Background())
}

func (i *FirstFreeSubnet) ToFirstFreeSubnetOutputWithContext(ctx context.Context) FirstFreeSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirstFreeSubnetOutput)
}

// FirstFreeSubnetArrayInput is an input type that accepts FirstFreeSubnetArray and FirstFreeSubnetArrayOutput values.
// You can construct a concrete instance of `FirstFreeSubnetArrayInput` via:
//
//	FirstFreeSubnetArray{ FirstFreeSubnetArgs{...} }
type FirstFreeSubnetArrayInput interface {
	pulumi.Input

	ToFirstFreeSubnetArrayOutput() FirstFreeSubnetArrayOutput
	ToFirstFreeSubnetArrayOutputWithContext(context.Context) FirstFreeSubnetArrayOutput
}

type FirstFreeSubnetArray []FirstFreeSubnetInput

func (FirstFreeSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirstFreeSubnet)(nil)).Elem()
}

func (i FirstFreeSubnetArray) ToFirstFreeSubnetArrayOutput() FirstFreeSubnetArrayOutput {
	return i.ToFirstFreeSubnetArrayOutputWithContext(context.Background())
}

func (i FirstFreeSubnetArray) ToFirstFreeSubnetArrayOutputWithContext(ctx context.Context) FirstFreeSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirstFreeSubnetArrayOutput)
}

// FirstFreeSubnetMapInput is an input type that accepts FirstFreeSubnetMap and FirstFreeSubnetMapOutput values.
// You can construct a concrete instance of `FirstFreeSubnetMapInput` via:
//
//	FirstFreeSubnetMap{ "key": FirstFreeSubnetArgs{...} }
type FirstFreeSubnetMapInput interface {
	pulumi.Input

	ToFirstFreeSubnetMapOutput() FirstFreeSubnetMapOutput
	ToFirstFreeSubnetMapOutputWithContext(context.Context) FirstFreeSubnetMapOutput
}

type FirstFreeSubnetMap map[string]FirstFreeSubnetInput

func (FirstFreeSubnetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirstFreeSubnet)(nil)).Elem()
}

func (i FirstFreeSubnetMap) ToFirstFreeSubnetMapOutput() FirstFreeSubnetMapOutput {
	return i.ToFirstFreeSubnetMapOutputWithContext(context.Background())
}

func (i FirstFreeSubnetMap) ToFirstFreeSubnetMapOutputWithContext(ctx context.Context) FirstFreeSubnetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirstFreeSubnetMapOutput)
}

type FirstFreeSubnetOutput struct{ *pulumi.OutputState }

func (FirstFreeSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirstFreeSubnet)(nil)).Elem()
}

func (o FirstFreeSubnetOutput) ToFirstFreeSubnetOutput() FirstFreeSubnetOutput {
	return o
}

func (o FirstFreeSubnetOutput) ToFirstFreeSubnetOutputWithContext(ctx context.Context) FirstFreeSubnetOutput {
	return o
}

func (o FirstFreeSubnetOutput) AllowIpRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.AllowIpRequests }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) CreatePtrRecords() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.CreatePtrRecords }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.MapOutput { return v.CustomFields }).(pulumi.MapOutput)
}

func (o FirstFreeSubnetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o FirstFreeSubnetOutput) DisplayHostnames() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.DisplayHostnames }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) EditDate() pulumi.StringOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.StringOutput { return v.EditDate }).(pulumi.StringOutput)
}

func (o FirstFreeSubnetOutput) Gateway() pulumi.MapOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.MapOutput { return v.Gateway }).(pulumi.MapOutput)
}

func (o FirstFreeSubnetOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

func (o FirstFreeSubnetOutput) HostDiscoveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.HostDiscoveryEnabled }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) IncludeInPing() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.IncludeInPing }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) IsFolder() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.IsFolder }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) IsFull() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.IsFull }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) LinkedSubnetId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.LinkedSubnetId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) LocationId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.LocationId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) MasterSubnetId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.MasterSubnetId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) NameserverId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.NameserverId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) Nameservers() pulumi.MapOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.MapOutput { return v.Nameservers }).(pulumi.MapOutput)
}

func (o FirstFreeSubnetOutput) ParentSubnetId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.ParentSubnetId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.StringOutput { return v.Permissions }).(pulumi.StringOutput)
}

func (o FirstFreeSubnetOutput) ResolveDns() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.ResolveDns }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) ScanAgentId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.ScanAgentId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) SectionId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.SectionId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) ShowName() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.BoolOutput { return v.ShowName }).(pulumi.BoolOutput)
}

func (o FirstFreeSubnetOutput) SubnetAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.StringOutput { return v.SubnetAddress }).(pulumi.StringOutput)
}

func (o FirstFreeSubnetOutput) SubnetId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.SubnetId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) SubnetMask() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.SubnetMask }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) UtilizationThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.UtilizationThreshold }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

func (o FirstFreeSubnetOutput) VrfId() pulumi.IntOutput {
	return o.ApplyT(func(v *FirstFreeSubnet) pulumi.IntOutput { return v.VrfId }).(pulumi.IntOutput)
}

type FirstFreeSubnetArrayOutput struct{ *pulumi.OutputState }

func (FirstFreeSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirstFreeSubnet)(nil)).Elem()
}

func (o FirstFreeSubnetArrayOutput) ToFirstFreeSubnetArrayOutput() FirstFreeSubnetArrayOutput {
	return o
}

func (o FirstFreeSubnetArrayOutput) ToFirstFreeSubnetArrayOutputWithContext(ctx context.Context) FirstFreeSubnetArrayOutput {
	return o
}

func (o FirstFreeSubnetArrayOutput) Index(i pulumi.IntInput) FirstFreeSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirstFreeSubnet {
		return vs[0].([]*FirstFreeSubnet)[vs[1].(int)]
	}).(FirstFreeSubnetOutput)
}

type FirstFreeSubnetMapOutput struct{ *pulumi.OutputState }

func (FirstFreeSubnetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirstFreeSubnet)(nil)).Elem()
}

func (o FirstFreeSubnetMapOutput) ToFirstFreeSubnetMapOutput() FirstFreeSubnetMapOutput {
	return o
}

func (o FirstFreeSubnetMapOutput) ToFirstFreeSubnetMapOutputWithContext(ctx context.Context) FirstFreeSubnetMapOutput {
	return o
}

func (o FirstFreeSubnetMapOutput) MapIndex(k pulumi.StringInput) FirstFreeSubnetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirstFreeSubnet {
		return vs[0].(map[string]*FirstFreeSubnet)[vs[1].(string)]
	}).(FirstFreeSubnetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirstFreeSubnetInput)(nil)).Elem(), &FirstFreeSubnet{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirstFreeSubnetArrayInput)(nil)).Elem(), FirstFreeSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirstFreeSubnetMapInput)(nil)).Elem(), FirstFreeSubnetMap{})
	pulumi.RegisterOutputType(FirstFreeSubnetOutput{})
	pulumi.RegisterOutputType(FirstFreeSubnetArrayOutput{})
	pulumi.RegisterOutputType(FirstFreeSubnetMapOutput{})
}
