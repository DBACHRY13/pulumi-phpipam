// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAddresses(args: GetAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetAddressesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("phpipam:index/getAddresses:getAddresses", {
        "customFieldFilter": args.customFieldFilter,
        "description": args.description,
        "hostname": args.hostname,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesArgs {
    /**
     * A map of custom fields to search for. The filter
     * values are regular expressions that follow the RE2 syntax for which you can
     * find documentation [here](https://github.com/google/re2/wiki/Syntax). All
     * fields need to match for the match to succeed.
     *
     * ⚠️  **NOTE:** An empty or unspecified `customFieldFilter` value is the
     * equivalent to a regular expression that matches everything, and hence will
     * return **all** addresses that contain the referenced custom field key!
     * Custom fileds must contain mandatory prefix `custom_`.
     */
    customFieldFilter?: {[key: string]: any};
    /**
     * The description of the IP address. `subnetId` is required
     * when using this field.
     */
    description?: string;
    /**
     * The host name of the IP address. `subnetId` is required when
     * using this field.
     */
    hostname?: string;
    /**
     * The ID of the subnet that the address resides in. This is
     * required to search on the `description` or `hostname` fields.
     *
     * One of the following fields is required alongside `subnetId`:
     */
    subnetId: number;
}

/**
 * A collection of values returned by getAddresses.
 */
export interface GetAddressesResult {
    /**
     * A list of discovered IP address IDs.
     */
    readonly addressIds: number[];
    readonly customFieldFilter?: {[key: string]: any};
    readonly description?: string;
    readonly hostname?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly subnetId: number;
}
export function getAddressesOutput(args: GetAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddressesResult> {
    return pulumi.output(args).apply((a: any) => getAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesOutputArgs {
    /**
     * A map of custom fields to search for. The filter
     * values are regular expressions that follow the RE2 syntax for which you can
     * find documentation [here](https://github.com/google/re2/wiki/Syntax). All
     * fields need to match for the match to succeed.
     *
     * ⚠️  **NOTE:** An empty or unspecified `customFieldFilter` value is the
     * equivalent to a regular expression that matches everything, and hence will
     * return **all** addresses that contain the referenced custom field key!
     * Custom fileds must contain mandatory prefix `custom_`.
     */
    customFieldFilter?: pulumi.Input<{[key: string]: any}>;
    /**
     * The description of the IP address. `subnetId` is required
     * when using this field.
     */
    description?: pulumi.Input<string>;
    /**
     * The host name of the IP address. `subnetId` is required when
     * using this field.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The ID of the subnet that the address resides in. This is
     * required to search on the `description` or `hostname` fields.
     *
     * One of the following fields is required alongside `subnetId`:
     */
    subnetId: pulumi.Input<number>;
}
