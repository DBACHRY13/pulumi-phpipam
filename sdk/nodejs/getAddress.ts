// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # phpipam.Address
 *
 * The `phpipam.Address` data source allows one to get information about a specific
 * IP address within PHPIPAM. Use this address to get general information about a
 * specific IP address such as its host name, description and more.
 *
 * Lookups for IP addresses can only happen at this time via its entry in the
 * database, or the IP address itself. Future versions of this resource, when such
 * features become generally available in the PHPIPAM API, will allow lookup based
 * on host name, allowing for better ability for this resource to discover IP
 * addresses that have been pre-assigned for a specific resource.
 *
 * **Example:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     ipAddress: "10.10.1.1",
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `subnetId` when multiple subnets share the same ip ranges :**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     ipAddress: "10.10.1.1",
 *     subnetId: 3,
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `description`:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     subnetId: 3,
 *     description: "Customer 1",
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `customFieldFilter`:**
 */
export function getAddress(args?: GetAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetAddressResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("phpipam:index/getAddress:getAddress", {
        "addressId": args.addressId,
        "customFieldFilter": args.customFieldFilter,
        "description": args.description,
        "hostname": args.hostname,
        "ipAddress": args.ipAddress,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddress.
 */
export interface GetAddressArgs {
    addressId?: number;
    /**
     * A map of custom fields to search for. The filter
     * values are regular expressions that follow the RE2 syntax for which you can
     * find documentation [here](https://github.com/google/re2/wiki/Syntax). All
     * fields need to match for the match to succeed.
     *
     * ⚠️ **NOTE:** `description`, `hostname`, and `customFieldFilter` fields return
     * the first match found without any warnings. If you are looking to return
     * multiple addresses, combine this data source with the
     * `phpipam.getAddresses` data source.
     *
     * ⚠️ **NOTE:** An empty or unspecified `customFieldFilter` value is the
     * equivalent to a regular expression that matches everything, and hence will
     * return the first address it sees in the subnet. Custom fileds must contain mandatory
     * prefix `custom_`.
     *
     * Arguments are processed in the following order of precedence:
     */
    customFieldFilter?: {[key: string]: any};
    /**
     * The description of the IP address. `subnetId` is required
     * when using this field.
     */
    description?: string;
    /**
     * The host name of the IP address. `subnetId` is required when
     * using this field.
     */
    hostname?: string;
    ipAddress?: string;
    /**
     * , and either one of `description`, `hostname`, or
     * `customFieldFilter`
     */
    subnetId?: number;
}

/**
 * A collection of values returned by getAddress.
 */
export interface GetAddressResult {
    /**
     * The ID of the IP address in the PHPIPAM database.
     */
    readonly addressId: number;
    readonly customFieldFilter?: {[key: string]: any};
    /**
     * A key/value map of custom fields for this address.
     */
    readonly customFields: {[key: string]: any};
    /**
     * The description provided to this IP address.
     */
    readonly description: string;
    /**
     * The ID of the associated device in the PHPIPAM database.
     */
    readonly deviceId: number;
    /**
     * The last time this resource was modified.
     */
    readonly editDate: string;
    /**
     * `true` if this address is excluded from ping probes.
     */
    readonly excludePing: boolean;
    /**
     * The hostname supplied to this IP address.
     */
    readonly hostname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * the IP address.
     */
    readonly ipAddress: string;
    /**
     * `true` if this IP address has been designated as a gateway.
     */
    readonly isGateway: boolean;
    /**
     * The last time this IP address answered ping probes.
     */
    readonly lastSeen: string;
    /**
     * The MAC address provided to this IP address.
     */
    readonly macAddress: string;
    /**
     * The note supplied to this IP address.
     */
    readonly note: string;
    /**
     * The owner name provided to this IP address.
     */
    readonly owner: string;
    /**
     * The ID of the associated PTR record in the PHPIPAM
     * database.
     */
    readonly ptrRecordId: number;
    /**
     * `true` if PTR records are not being created for this IP
     * address.
     */
    readonly skipPtrRecord: boolean;
    /**
     * The tag ID in the database for the IP address' specific
     * state. **NOTE:** This is currently represented as an integer but may change
     * to the specific string representation at a later time.
     */
    readonly stateTagId: number;
    /**
     * The database ID of the subnet this IP address belongs to.
     */
    readonly subnetId: number;
    /**
     * A string port label that is associated with this
     * address.
     */
    readonly switchPortLabel: string;
}
/**
 * ## # phpipam.Address
 *
 * The `phpipam.Address` data source allows one to get information about a specific
 * IP address within PHPIPAM. Use this address to get general information about a
 * specific IP address such as its host name, description and more.
 *
 * Lookups for IP addresses can only happen at this time via its entry in the
 * database, or the IP address itself. Future versions of this resource, when such
 * features become generally available in the PHPIPAM API, will allow lookup based
 * on host name, allowing for better ability for this resource to discover IP
 * addresses that have been pre-assigned for a specific resource.
 *
 * **Example:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     ipAddress: "10.10.1.1",
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `subnetId` when multiple subnets share the same ip ranges :**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     ipAddress: "10.10.1.1",
 *     subnetId: 3,
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `description`:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const address = phpipam.getAddress({
 *     subnetId: 3,
 *     description: "Customer 1",
 * });
 * export const addressDescription = address.then(address => address.description);
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * **Example With `customFieldFilter`:**
 */
export function getAddressOutput(args?: GetAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddressResult> {
    return pulumi.output(args).apply((a: any) => getAddress(a, opts))
}

/**
 * A collection of arguments for invoking getAddress.
 */
export interface GetAddressOutputArgs {
    addressId?: pulumi.Input<number>;
    /**
     * A map of custom fields to search for. The filter
     * values are regular expressions that follow the RE2 syntax for which you can
     * find documentation [here](https://github.com/google/re2/wiki/Syntax). All
     * fields need to match for the match to succeed.
     *
     * ⚠️ **NOTE:** `description`, `hostname`, and `customFieldFilter` fields return
     * the first match found without any warnings. If you are looking to return
     * multiple addresses, combine this data source with the
     * `phpipam.getAddresses` data source.
     *
     * ⚠️ **NOTE:** An empty or unspecified `customFieldFilter` value is the
     * equivalent to a regular expression that matches everything, and hence will
     * return the first address it sees in the subnet. Custom fileds must contain mandatory
     * prefix `custom_`.
     *
     * Arguments are processed in the following order of precedence:
     */
    customFieldFilter?: pulumi.Input<{[key: string]: any}>;
    /**
     * The description of the IP address. `subnetId` is required
     * when using this field.
     */
    description?: pulumi.Input<string>;
    /**
     * The host name of the IP address. `subnetId` is required when
     * using this field.
     */
    hostname?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    /**
     * , and either one of `description`, `hostname`, or
     * `customFieldFilter`
     */
    subnetId?: pulumi.Input<number>;
}
