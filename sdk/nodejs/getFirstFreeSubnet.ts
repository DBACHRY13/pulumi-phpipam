// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirstFreeSubnet(args: GetFirstFreeSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetFirstFreeSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("phpipam:index/getFirstFreeSubnet:getFirstFreeSubnet", {
        "subnetId": args.subnetId,
        "subnetMask": args.subnetMask,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirstFreeSubnet.
 */
export interface GetFirstFreeSubnetArgs {
    /**
     * The ID of the subnet to look up the subnet in.
     */
    subnetId: number;
    /**
     * Mask that will be used to look next available subnet
     */
    subnetMask: number;
}

/**
 * A collection of values returned by getFirstFreeSubnet.
 */
export interface GetFirstFreeSubnetResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The next available IP address.
     */
    readonly ipAddress: string;
    readonly subnetId: number;
    readonly subnetMask: number;
}
export function getFirstFreeSubnetOutput(args: GetFirstFreeSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirstFreeSubnetResult> {
    return pulumi.output(args).apply((a: any) => getFirstFreeSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getFirstFreeSubnet.
 */
export interface GetFirstFreeSubnetOutputArgs {
    /**
     * The ID of the subnet to look up the subnet in.
     */
    subnetId: pulumi.Input<number>;
    /**
     * Mask that will be used to look next available subnet
     */
    subnetMask: pulumi.Input<number>;
}
