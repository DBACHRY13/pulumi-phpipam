// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # phpipam.Section
 *
 * The `phpipam.Section` data source allows one to look up a specific section,
 * either by database ID or name. This data can then be used to manage other parts
 * of PHPIPAM, such as in the event that the section name is known but not its ID,
 * which is required for managing subnets.
 *
 * **Example:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const section = phpipam.getSection({
 *     name: "Customers",
 * });
 * const subnet = new phpipam.Subnet("subnet", {
 *     sectionId: section.then(section => section.sectionId),
 *     subnetAddress: "10.10.3.0",
 *     subnetMask: 24,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSection(args?: GetSectionArgs, opts?: pulumi.InvokeOptions): Promise<GetSectionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("phpipam:index/getSection:getSection", {
        "name": args.name,
        "sectionId": args.sectionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSection.
 */
export interface GetSectionArgs {
    /**
     * The name of the section to look up.
     *
     * One of `sectionId` or `name` must be supplied. If both are supplied,
     * `sectionId` is used.
     */
    name?: string;
    /**
     * The ID of the section to look up.
     */
    sectionId?: number;
}

/**
 * A collection of values returned by getSection.
 */
export interface GetSectionResult {
    /**
     * The section's description.
     */
    readonly description: string;
    /**
     * The section's display order number.
     */
    readonly displayOrder: number;
    /**
     * The ID of the DNS resolver to use in the section.
     */
    readonly dnsResolverId: number;
    /**
     * The date this resource was last edited.
     */
    readonly editDate: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the parent section in the PHPIPAM database.
     */
    readonly masterSectionId: number;
    /**
     * The name of the section.
     */
    readonly name: string;
    /**
     * A JSON representation of permissions for this section.
     */
    readonly permissions: string;
    /**
     * The ID of the section in the PHPIPAM database.
     */
    readonly sectionId: number;
    /**
     * `true` if supernets are only being shown in the subnet
     * listing.
     */
    readonly showSupernetOnly: boolean;
    /**
     * `true` if VLANs are being shown in the subnet
     * listing for this section.
     */
    readonly showVlanInSubnetListing: boolean;
    /**
     * `true` if VRFs are being shown in the subnet
     * listing for this section.
     */
    readonly showVrfInSubnetListing: boolean;
    /**
     * `true` if this subnet is set up to check that IP addresses
     * are valid for the subnets they are in.
     */
    readonly strictMode: boolean;
    /**
     * How subnets in this section are ordered.
     */
    readonly subnetOrdering: string;
}
/**
 * ## # phpipam.Section
 *
 * The `phpipam.Section` data source allows one to look up a specific section,
 * either by database ID or name. This data can then be used to manage other parts
 * of PHPIPAM, such as in the event that the section name is known but not its ID,
 * which is required for managing subnets.
 *
 * **Example:**
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as phpipam from "@pulumi/phpipam";
 *
 * const section = phpipam.getSection({
 *     name: "Customers",
 * });
 * const subnet = new phpipam.Subnet("subnet", {
 *     sectionId: section.then(section => section.sectionId),
 *     subnetAddress: "10.10.3.0",
 *     subnetMask: 24,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSectionOutput(args?: GetSectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSectionResult> {
    return pulumi.output(args).apply((a: any) => getSection(a, opts))
}

/**
 * A collection of arguments for invoking getSection.
 */
export interface GetSectionOutputArgs {
    /**
     * The name of the section to look up.
     *
     * One of `sectionId` or `name` must be supplied. If both are supplied,
     * `sectionId` is used.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the section to look up.
     */
    sectionId?: pulumi.Input<number>;
}
