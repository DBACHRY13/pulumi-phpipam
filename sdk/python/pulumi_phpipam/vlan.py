# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['VlanArgs', 'Vlan']

@pulumi.input_type
class VlanArgs:
    def __init__(__self__, *,
                 number: pulumi.Input[int],
                 custom_fields: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 l2_domain_id: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Vlan resource.
        :param pulumi.Input[int] number: The number of the VLAN (the actual VLAN ID on your switch).
        :param pulumi.Input[Mapping[str, Any]] custom_fields: A key/value map of custom fields for this
               VLAN.
               
               ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
               all fields set to optional when using this plugin. For more info see
               [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
               ensure that your fields also do not have default values, or ensure the default
               is set in your TF configuration. Diff loops may happen otherwise!
        :param pulumi.Input[str] description: The description supplied to the VLAN.
        :param pulumi.Input[int] l2_domain_id: The layer 2 domain ID in the PHPIPAM database.
        :param pulumi.Input[str] name: The name/label of the VLAN.
        """
        pulumi.set(__self__, "number", number)
        if custom_fields is not None:
            pulumi.set(__self__, "custom_fields", custom_fields)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if l2_domain_id is not None:
            pulumi.set(__self__, "l2_domain_id", l2_domain_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def number(self) -> pulumi.Input[int]:
        """
        The number of the VLAN (the actual VLAN ID on your switch).
        """
        return pulumi.get(self, "number")

    @number.setter
    def number(self, value: pulumi.Input[int]):
        pulumi.set(self, "number", value)

    @property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        A key/value map of custom fields for this
        VLAN.

        ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
        all fields set to optional when using this plugin. For more info see
        [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
        ensure that your fields also do not have default values, or ensure the default
        is set in your TF configuration. Diff loops may happen otherwise!
        """
        return pulumi.get(self, "custom_fields")

    @custom_fields.setter
    def custom_fields(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "custom_fields", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description supplied to the VLAN.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="l2DomainId")
    def l2_domain_id(self) -> Optional[pulumi.Input[int]]:
        """
        The layer 2 domain ID in the PHPIPAM database.
        """
        return pulumi.get(self, "l2_domain_id")

    @l2_domain_id.setter
    def l2_domain_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "l2_domain_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name/label of the VLAN.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _VlanState:
    def __init__(__self__, *,
                 custom_fields: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 edit_date: Optional[pulumi.Input[str]] = None,
                 l2_domain_id: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[int]] = None,
                 vlan_id: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering Vlan resources.
        :param pulumi.Input[Mapping[str, Any]] custom_fields: A key/value map of custom fields for this
               VLAN.
               
               ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
               all fields set to optional when using this plugin. For more info see
               [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
               ensure that your fields also do not have default values, or ensure the default
               is set in your TF configuration. Diff loops may happen otherwise!
        :param pulumi.Input[str] description: The description supplied to the VLAN.
        :param pulumi.Input[str] edit_date: The date this resource was last updated.
        :param pulumi.Input[int] l2_domain_id: The layer 2 domain ID in the PHPIPAM database.
        :param pulumi.Input[str] name: The name/label of the VLAN.
        :param pulumi.Input[int] number: The number of the VLAN (the actual VLAN ID on your switch).
        :param pulumi.Input[int] vlan_id: The ID of the VLAN to look up. **NOTE:** this is the database ID,
               not the VLAN number - if you need this, use the `number` parameter.
        """
        if custom_fields is not None:
            pulumi.set(__self__, "custom_fields", custom_fields)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if edit_date is not None:
            pulumi.set(__self__, "edit_date", edit_date)
        if l2_domain_id is not None:
            pulumi.set(__self__, "l2_domain_id", l2_domain_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if number is not None:
            pulumi.set(__self__, "number", number)
        if vlan_id is not None:
            pulumi.set(__self__, "vlan_id", vlan_id)

    @property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        A key/value map of custom fields for this
        VLAN.

        ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
        all fields set to optional when using this plugin. For more info see
        [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
        ensure that your fields also do not have default values, or ensure the default
        is set in your TF configuration. Diff loops may happen otherwise!
        """
        return pulumi.get(self, "custom_fields")

    @custom_fields.setter
    def custom_fields(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "custom_fields", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description supplied to the VLAN.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="editDate")
    def edit_date(self) -> Optional[pulumi.Input[str]]:
        """
        The date this resource was last updated.
        """
        return pulumi.get(self, "edit_date")

    @edit_date.setter
    def edit_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edit_date", value)

    @property
    @pulumi.getter(name="l2DomainId")
    def l2_domain_id(self) -> Optional[pulumi.Input[int]]:
        """
        The layer 2 domain ID in the PHPIPAM database.
        """
        return pulumi.get(self, "l2_domain_id")

    @l2_domain_id.setter
    def l2_domain_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "l2_domain_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name/label of the VLAN.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def number(self) -> Optional[pulumi.Input[int]]:
        """
        The number of the VLAN (the actual VLAN ID on your switch).
        """
        return pulumi.get(self, "number")

    @number.setter
    def number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "number", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> Optional[pulumi.Input[int]]:
        """
        The ID of the VLAN to look up. **NOTE:** this is the database ID,
        not the VLAN number - if you need this, use the `number` parameter.
        """
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vlan_id", value)


class Vlan(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_fields: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 l2_domain_id: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Create a Vlan resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Mapping[str, Any]] custom_fields: A key/value map of custom fields for this
               VLAN.
               
               ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
               all fields set to optional when using this plugin. For more info see
               [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
               ensure that your fields also do not have default values, or ensure the default
               is set in your TF configuration. Diff loops may happen otherwise!
        :param pulumi.Input[str] description: The description supplied to the VLAN.
        :param pulumi.Input[int] l2_domain_id: The layer 2 domain ID in the PHPIPAM database.
        :param pulumi.Input[str] name: The name/label of the VLAN.
        :param pulumi.Input[int] number: The number of the VLAN (the actual VLAN ID on your switch).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VlanArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Vlan resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param VlanArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VlanArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_fields: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 l2_domain_id: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VlanArgs.__new__(VlanArgs)

            __props__.__dict__["custom_fields"] = custom_fields
            __props__.__dict__["description"] = description
            __props__.__dict__["l2_domain_id"] = l2_domain_id
            __props__.__dict__["name"] = name
            if number is None and not opts.urn:
                raise TypeError("Missing required property 'number'")
            __props__.__dict__["number"] = number
            __props__.__dict__["edit_date"] = None
            __props__.__dict__["vlan_id"] = None
        super(Vlan, __self__).__init__(
            'phpipam:index/vlan:Vlan',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            custom_fields: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            description: Optional[pulumi.Input[str]] = None,
            edit_date: Optional[pulumi.Input[str]] = None,
            l2_domain_id: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            number: Optional[pulumi.Input[int]] = None,
            vlan_id: Optional[pulumi.Input[int]] = None) -> 'Vlan':
        """
        Get an existing Vlan resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Mapping[str, Any]] custom_fields: A key/value map of custom fields for this
               VLAN.
               
               ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
               all fields set to optional when using this plugin. For more info see
               [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
               ensure that your fields also do not have default values, or ensure the default
               is set in your TF configuration. Diff loops may happen otherwise!
        :param pulumi.Input[str] description: The description supplied to the VLAN.
        :param pulumi.Input[str] edit_date: The date this resource was last updated.
        :param pulumi.Input[int] l2_domain_id: The layer 2 domain ID in the PHPIPAM database.
        :param pulumi.Input[str] name: The name/label of the VLAN.
        :param pulumi.Input[int] number: The number of the VLAN (the actual VLAN ID on your switch).
        :param pulumi.Input[int] vlan_id: The ID of the VLAN to look up. **NOTE:** this is the database ID,
               not the VLAN number - if you need this, use the `number` parameter.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VlanState.__new__(_VlanState)

        __props__.__dict__["custom_fields"] = custom_fields
        __props__.__dict__["description"] = description
        __props__.__dict__["edit_date"] = edit_date
        __props__.__dict__["l2_domain_id"] = l2_domain_id
        __props__.__dict__["name"] = name
        __props__.__dict__["number"] = number
        __props__.__dict__["vlan_id"] = vlan_id
        return Vlan(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        """
        A key/value map of custom fields for this
        VLAN.

        ⚠️ **NOTE on custom fields:** PHPIPAM installations with custom fields must have
        all fields set to optional when using this plugin. For more info see
        [here](https://github.com/phpipam/phpipam/issues/1073). Further to this, either
        ensure that your fields also do not have default values, or ensure the default
        is set in your TF configuration. Diff loops may happen otherwise!
        """
        return pulumi.get(self, "custom_fields")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        The description supplied to the VLAN.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="editDate")
    def edit_date(self) -> pulumi.Output[str]:
        """
        The date this resource was last updated.
        """
        return pulumi.get(self, "edit_date")

    @property
    @pulumi.getter(name="l2DomainId")
    def l2_domain_id(self) -> pulumi.Output[int]:
        """
        The layer 2 domain ID in the PHPIPAM database.
        """
        return pulumi.get(self, "l2_domain_id")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name/label of the VLAN.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def number(self) -> pulumi.Output[int]:
        """
        The number of the VLAN (the actual VLAN ID on your switch).
        """
        return pulumi.get(self, "number")

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Output[int]:
        """
        The ID of the VLAN to look up. **NOTE:** this is the database ID,
        not the VLAN number - if you need this, use the `number` parameter.
        """
        return pulumi.get(self, "vlan_id")

